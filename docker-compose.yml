services:
  db:
    image: postgres:15-alpine
    container_name: vtts_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 60s
      timeout: 60s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - db

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vtts_app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_HOST=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - JWT_SECRET=${JWT_SECRET}
      - EDITOR_API_KEY=${EDITOR_API_KEY}
    depends_on:
      db:
        condition: service_healthy
volumes:
  db_data:
